{
  "name": "Morphosis Prompt",
  "description": "Use this simplified approach for straightforward prompts or when time is limited. It focuses on essential improvements without complex techniques. Prefer this over other methods when you need quick, clear refinements without extensive analysis.",
  "template": "\nGiven an initial prompt:\n\nInitial Prompt: [Insert initial prompt here]\n\nUnderstand the Task: Grasp the main objective, goals, requirements, constraints, and expected output.\n- Minimal Changes: If an existing prompt is provided, improve it only if it's simple. For complex prompts, enhance clarity and add missing elements without altering the original structure.\n- Leverage Autoregressive Nature: Strategically order information to prime the model for better results. Generate key concepts, context, or vocabulary early in the prompt to inform later reasoning and outputs.\n- Reasoning Before Conclusions: Encourage reasoning steps before any conclusions are reached. If user examples show reasoning afterward, reverse the order. Never start examples with conclusions.\n    - Reasoning Order: Identify reasoning and conclusion parts. Determine their order and reverse if needed. Conclusions, classifications, or results should always appear last.\n- Examples: Include high-quality examples if helpful, using placeholders [in brackets] for complex elements.\n   - Assess example needs, quantity, and complexity for potential placeholder use.\n- Clarity and Conciseness: Use clear, specific language. Avoid unnecessary instructions or bland statements.\n- Formatting: Use markdown features for readability. Avoid code blocks unless requested.\n- Preserve User Content: Retain extensive guidelines or examples from input. Break down vague instructions into sub-steps. Maintain user-provided details, guidelines, examples, variables, or placeholders.\n- Constants: Include constants (guides, rubrics, examples) as they resist prompt injection.\n- Output Format: Specify appropriate output format in detail, including length and syntax.\n    - For structured data, prefer JSON output (unwrapped unless requested).\n\nThe final prompt should follow this structure, with no additional commentary:\nLeverage Autoregressive Nature: Strategically order information to prime the model for better results. Generate key concepts, context, or vocabulary early in the prompt to inform later reasoning and outputs.\n\n[Concise task instruction - first line, no header]\n\n[Additional details as needed]\n\n[Optional sections with headings or bullet points for detailed steps]\n\n# Context Generation\n\n[Instructions for generating key concepts, vocabulary, or context to inform later reasoning]\n\n# Steps [optional]\n\n[Detailed task breakdown]\n\n# Reasoning Process\n\n[Specific instructions for the reasoning process, ensuring it precedes conclusions]\n\n# Output Format\n\n[Detailed output format specifications]\n\n# Examples [optional]\n\n[1-3 well-defined examples with placeholders if necessary. Mark input/output clearly. Use placeholders and indicate if real examples differ in length/complexity]\n\n# Notes [optional]\n\n[Edge cases, important considerations, repeated key points]\n\nOnly provide the output in the following JSON format enclosed in <json> tags:\n\n<json>\n{\n\"initial_prompt_evaluation\": \"Your evaluation of the initial prompt with Strengths and Weaknesses in a string\",\n\"refined_prompt\": \"Your refined prompt into quote\",\n\"explanation_of_refinements\": \"Explanation of the techniques used and improvements made, also include the extract of final prompt where it made.Answer in bullet points if accurate. Output in a single comprehensive string\"\n}\n</json>\n",
  "examples": [
    "What's the population of New York City and how tall is the Empire State Building and who was the first mayor?",
    "Explain why the experiment failed"
  ]
}