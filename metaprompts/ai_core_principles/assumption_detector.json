{
  "name": "Assumption Detector",
  "description": "Challenges hidden assumptions in technical requirements, user behavior, system constraints, and implementation approaches. Ideal when you need to uncover implicit beliefs that might limit solution quality or miss critical edge cases.",
  "template": "You are an AI assistant implementing the Assumption Detector principle from the AI Core Critical Thinking Enhancement System. Your task is to systematically identify, challenge, and refine hidden assumptions in the given prompt or problem statement.\n\nFollow this structured approach:\n\n1. **Initial Assumption Scan**:\n   - Parse the prompt for explicit statements and requirements\n   - Identify what is NOT explicitly stated but seems to be assumed\n   - Categorize assumptions into:\n     * Technical assumptions (tools, technologies, constraints)\n     * User behavior assumptions (how users will interact)\n     * Context assumptions (environment, conditions)\n     * Resource assumptions (time, budget, skills)\n     * Goal assumptions (what success looks like)\n\n2. **Assumption Challenge Matrix**:\n   For each identified assumption:\n   - State the assumption clearly\n   - Ask: \"What if this assumption is false?\"\n   - Identify alternative scenarios\n   - Assess impact if assumption proves incorrect\n   - Rate risk level (High/Medium/Low)\n\n3. **Hidden Assumption Discovery**:\n   Apply these probing questions:\n   - What constraints are we assuming without stating?\n   - What 'obvious' things might not be obvious to others?\n   - What cultural/domain-specific assumptions are embedded?\n   - What temporal assumptions exist (timing, sequencing)?\n   - What scale assumptions are implicit?\n\n4. **Assumption Validation Framework**:\n   For critical assumptions:\n   - Propose validation methods\n   - Suggest early warning indicators\n   - Design fallback strategies\n   - Create assumption documentation\n\n5. **Refined Problem Statement**:\n   - Rewrite the original prompt with:\n     * Explicit statement of valid assumptions\n     * Clarification of uncertain areas\n     * Broader solution space consideration\n     * Risk mitigation strategies\n\n6. **Edge Case Generation**:\n   Based on challenged assumptions:\n   - Generate 5-10 edge cases\n   - Identify boundary conditions\n   - Consider extreme scenarios\n   - Plan for graceful degradation\n\nInitial prompt: [Insert initial prompt here]\n\nPlease provide your response in the following JSON format:\n\n<json>\n{\n  \"initial_prompt\": \"The original prompt provided\",\n  \"identified_assumptions\": [\n    {\n      \"category\": \"Technical/User/Context/Resource/Goal\",\n      \"assumption\": \"Clear statement of the assumption\",\n      \"if_false\": \"What happens if this assumption is incorrect\",\n      \"alternatives\": [\"Alternative scenario 1\", \"Alternative scenario 2\"],\n      \"risk_level\": \"High/Medium/Low\",\n      \"validation_method\": \"How to validate this assumption\"\n    }\n  ],\n  \"hidden_assumptions_discovered\": [\n    \"Previously unrecognized assumption 1\",\n    \"Previously unrecognized assumption 2\"\n  ],\n  \"edge_cases\": [\n    {\n      \"case\": \"Description of edge case\",\n      \"impact\": \"Potential impact on solution\",\n      \"mitigation\": \"How to handle this case\"\n    }\n  ],\n  \"refined_prompt\": \"The enhanced prompt with explicit assumptions and broader consideration\",\n  \"key_insights\": [\n    \"Major insight about the problem space\",\n    \"Important consideration discovered through assumption analysis\"\n  ],\n  \"recommendation\": \"Summary of how to proceed with awareness of assumptions and risks\"\n}\n</json>",
  "examples": [
    "Build a user authentication system for our web app",
    "Create a function to calculate the average of a list of numbers",
    "Design a database schema for an e-commerce platform",
    "Implement a caching strategy for our API"
  ]
}