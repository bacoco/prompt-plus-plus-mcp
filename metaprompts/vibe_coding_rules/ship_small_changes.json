{
  "name": "Ship Small Changes",
  "description": "Deploy small, incremental changes frequently rather than large batches. Reduces risk, enables faster feedback, and improves team velocity.",
  "template": "You are an AI assistant implementing the 'Ship Small Changes' principle from the Vibe Coding Rules. Your task is to break down work into small, safe, deployable increments that deliver value quickly.\n\nFollow this incremental delivery framework:\n\n1. **Change Decomposition**:\n   - Feature slicing strategies\n   - Vertical vs horizontal splits\n   - User-visible increments\n   - Infrastructure preparation\n   - Risk isolation\n   - Value delivery order\n\n2. **Atomic Change Units**:\n   - **Single Responsibility**: One thing well\n   - **Complete**: Works end-to-end\n   - **Tested**: Comprehensive coverage\n   - **Revertible**: Easy rollback\n   - **Observable**: Measurable impact\n   - **Independent**: Minimal coupling\n\n3. **Deployment Strategies**:\n   - **Feature Flags**: Progressive rollout\n   - **Dark Launches**: Backend first\n   - **Canary Releases**: Gradual exposure\n   - **Blue-Green**: Instant switch\n   - **Rolling Updates**: Incremental\n   - **A/B Testing**: Comparative deployment\n\n4. **Risk Management**:\n   - Change risk assessment\n   - Blast radius limitation\n   - Rollback procedures\n   - Monitoring setup\n   - Alert configuration\n   - Recovery time objectives\n\n5. **Continuous Integration**:\n   - Automated testing gates\n   - Build optimization\n   - Deploy pipeline design\n   - Environment progression\n   - Approval workflows\n   - Smoke test suites\n\n6. **Team Coordination**:\n   - Communication protocols\n   - Dependency management\n   - Merge conflict prevention\n   - Release coordination\n   - On-call responsibilities\n\nInitial prompt: [Insert initial prompt here]\n\nPlease provide your response in the following JSON format:\n\n<json>\n{\n  \"initial_prompt\": \"The original prompt provided\",\n  \"feature_analysis\": {\n    \"total_scope\": \"Complete feature size\",\n    \"complexity\": \"Simple/Moderate/Complex\",\n    \"dependencies\": [\"Required system\"],\n    \"risk_level\": \"High/Medium/Low\",\n    \"user_impact\": \"Major/Minor/None\",\n    \"current_approach\": \"Big bang/Incremental\"\n  },\n  \"decomposition_strategy\": [\n    {\n      \"increment\": \"Increment 1 name\",\n      \"description\": \"What it delivers\",\n      \"size\": \"Hours/Days of work\",\n      \"dependencies\": [\"What it needs\"],\n      \"user_value\": \"Visible benefit\",\n      \"technical_value\": \"Foundation laid\",\n      \"risk\": \"Low/Medium/High\"\n    }\n  ],\n  \"deployment_plan\": [\n    {\n      \"increment\": \"What to deploy\",\n      \"strategy\": \"Feature flag/Canary/Direct\",\n      \"rollout_percentage\": \"Initial exposure\",\n      \"success_criteria\": [\n        \"Metric threshold\",\n        \"Error rate limit\"\n      ],\n      \"rollback_trigger\": \"When to revert\",\n      \"promotion_timeline\": \"Expansion plan\"\n    }\n  ],\n  \"feature_flag_design\": [\n    {\n      \"flag_name\": \"Descriptive identifier\",\n      \"flag_type\": \"Boolean/Percentage/Variant\",\n      \"default_state\": \"Off/On/Value\",\n      \"target_criteria\": \"User segment\",\n      \"lifecycle\": \"Temporary/Permanent\",\n      \"cleanup_date\": \"When to remove\"\n    }\n  ],\n  \"risk_mitigation\": [\n    {\n      \"risk\": \"Potential issue\",\n      \"likelihood\": \"High/Medium/Low\",\n      \"impact\": \"Severity if occurs\",\n      \"mitigation\": \"Prevention strategy\",\n      \"detection\": \"How to notice\",\n      \"response\": \"What to do\"\n    }\n  ],\n  \"monitoring_setup\": {\n    \"key_metrics\": [\n      {\n        \"metric\": \"What to measure\",\n        \"baseline\": \"Normal value\",\n        \"alert_threshold\": \"When to alert\",\n        \"dashboard\": \"Where to view\"\n      }\n    ],\n    \"synthetic_tests\": [\n      \"Critical path to monitor\"\n    ],\n    \"logging_enhancements\": [\n      \"New log points needed\"\n    ]\n  },\n  \"ci_cd_optimization\": {\n    \"pipeline_changes\": [\n      \"New test stage\",\n      \"Deployment gate\"\n    ],\n    \"build_time_target\": \"Minutes\",\n    \"deploy_time_target\": \"Minutes\",\n    \"rollback_time\": \"Seconds/Minutes\",\n    \"automation_gaps\": [\"Manual step to automate\"]\n  },\n  \"team_workflow\": {\n    \"pr_size_limit\": \"Max lines changed\",\n    \"review_sla\": \"Hours to review\",\n    \"merge_strategy\": \"Squash/Rebase/Merge\",\n    \"communication\": [\n      {\n        \"event\": \"Before deploy/After deploy\",\n        \"channel\": \"Slack/Email/Standup\",\n        \"message\": \"What to communicate\"\n      }\n    ]\n  },\n  \"success_metrics\": {\n    \"deployment_frequency\": {\n      \"current\": \"Weekly/Monthly\",\n      \"target\": \"Daily/Multiple daily\",\n      \"improvement\": \"X times more frequent\"\n    },\n    \"lead_time\": {\n      \"current\": \"Days\",\n      \"target\": \"Hours\",\n      \"reduction\": \"Percentage faster\"\n    },\n    \"failure_rate\": {\n      \"current\": \"X%\",\n      \"target\": \"<Y%\",\n      \"improvement\": \"More reliable\"\n    }\n  },\n  \"key_insights\": [\n    \"Natural split points identified\",\n    \"Risk significantly reduced\",\n    \"Faster user feedback enabled\"\n  ],\n  \"recommendation\": \"Specific incremental delivery plan with timeline\"\n}\n</json>",
  "examples": [
    "Break down major feature into daily deployments",
    "Convert big migration to incremental steps",
    "Split monolithic PR into reviewable chunks",
    "Implement gradual architectural change"
  ]
}